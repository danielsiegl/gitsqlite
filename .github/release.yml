name: Create Release binaries

on:
    release:
      types: [created]

jobs:
    Build Release:
        runs-on: windows-latest
        timeout-minutes: 15

        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                fetch-depth: 0 # Mandatory to use the extract version from tag action
        
            - name: Extract version from tag
              id: get_version
              uses: dhkatz/get-version-action@v3.0.0

            - name: Set up Go
              uses: actions/setup-go@v3
              with:
                go-version: 1.24

            - name: Build Release Binary
              shell: pwsh
              run: |
                Write-Host "Building release binary with version: ${{ steps.get_version.outputs.version }}" -ForegroundColor Green
                .\build-local.ps1 -VersionPrefix "${{ steps.get_version.outputs.version }}"
                
                # Verify the build was successful
                if (Test-Path "gitsqlite.exe") {
                    Write-Host "✓ Build successful - gitsqlite.exe created" -ForegroundColor Green
                    .\gitsqlite.exe -version
                } else {
                    Write-Host "✗ Build failed - gitsqlite.exe not found" -ForegroundColor Red
                    exit 1
                }

            - name: Upload binaries to release
              uses: svenstaro/upload-release-action@2.9.0
              with:
                repo_token: ${{ secrets.GITHUB_TOKEN }}
                file: ./gitsqlite.exe
                asset_name: gitsqlite.exe
                tag: ${{ github.ref }}
                overwrite: true

